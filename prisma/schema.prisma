// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum ProductCategory {
  Men
  Women
  Kids
}

model Products {
  id           Int             @id @default(autoincrement())
  name         String
  price        Float
  category     ProductCategory
  type         String
  discount     Float?
  description  String
  salePrice    Float?
  onSale       Boolean         @default(false)
  imageUrl     String
  rating       Float           @default(0)
  reviews      Int             @default(0)
  stock        Int             @default(0)
  isNew        Boolean         @default(false)
  isFeatured   Boolean         @default(false)
  isBestSeller Boolean         @default(false)
  isTrending   Boolean         @default(false)
  isPopular    Boolean         @default(false)
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  orders       Orders[] // Add this to create a one-to-many relationship
}

enum DeliveryStatus{ // Corrected typo
  pending
  cancelled
  shipped
  delivered
}
enum PaymentStatus{
  pending
  failed
  success
}

model Orders{
  id             Int            @id @default(autoincrement())
  userId         Int
  productId      Int // The actual foreign key column
  product        Products       @relation(fields: [productId], references: [id]) // The relation field
  isActive       Boolean        @default(true)
  quantity       Int            @default(1)
  totalPrice     Float
  deliveryStatus DeliveryStatus @default(pending) // Corrected typo
  paymentStatus  PaymentStatus  @default(pending)
  createdAt      DateTime       @default(now())
}